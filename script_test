# Création du groupe de ressources Azure
az group create --name b6duna --location japaneast

# Création du Cluster AKS
az aks create -g b6duna -n AKSClusterd --enable-managed-identity --node-count 2 --enable-addons monitoring --enable-msi-auth-for-monitoring  --generate-ssh-keys

# Connexion au Cluster :
az aks get-credentials --resource-group b6duna --name AKSClusterd

*Result *Merged "AKSClusterd" as current context in /home/dunvael/.kube/config*

# Déployer l'application à l'aide du fichier yaml
kubectl apply -f azure-vote.yaml # (nom du fichier yaml)

# Vérifier quel est le type de networking du service
kubectl get service vote-service --watch

# Créer un secret pour le mot de passe Redis avec un username
kubectl create secret generic nomdusecret --from-literal=nomdeclé=userduna --from-literal=nomdeclé=redis_password_915

# Vérifier si le secret a bien été créé
kubectl describe secret nomdusecret

# Créer un storage account
az storage account create -n b6dredisstockacc -g b6duna -l japaneast --sku Standard_LRS

# Créer un fileshare
az storage share create -n $AKS_PERS_SHARE_NAME --connection-string $AZURE_STORAGE_CONNECTION_STRING

# Créer un secret Kubernetes
kubectl create secret generic storage-secret --from-literal=azurestorageaccountname=b6dredisstockacc --from-literal=azurestorageaccountkey=Yd6zb/j1AswJ3ilydHw4ood/vn6VXFLuZbIyViX2gpw8OoXzj3SLreg5GvxnowD5TiyYIw0vt6s9+ASthN1pqQ==


# Supprimer le Cluster
az group delete --name b6duna --yes --no-wait









# Créer un enregistrement DNS
k8s-redis.twixlmedia.com A 104.40.246.55

# Vérifier les pods créés et leur statut
kubectl get nodes

# Récupérer les pods avec leur id et leur statut (running...)
kubectl describe pods "podid"

# Supprimer un pod
kubectl delete pods "podid"

# Récupérer les pods avec leur id et leur statut
kubectl describe pods podid

# Récupérer le déploiement
kubectl get deployment

# Vérifier le statut du déploiement
kubectl describe deployment mydeployment

# Supprimer le déploiement
kubectl delete deployment nomdudéploiement

# Accéder aux logs de tous les containers
kubectl logs mypod --all-containers

# Accéder aux logs d'un container
kubectl logs mypod -c mycontainer

# Accéder aux événements
kubectl get events

# Lister tous les événements d'un pod
kubectl get events --field-selector involvedObject.name=mypod