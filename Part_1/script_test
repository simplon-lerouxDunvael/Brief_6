# Azure resource group Creation
az group create --name b6duna --location japaneast

# AKS Cluster creation
az aks create -g b6duna -n AKSClusterd --enable-managed-identity --node-count 2 --enable-addons monitoring --enable-msi-auth-for-monitoring  --generate-ssh-keys

# Connexion to Cluster :
az aks get-credentials --resource-group b6duna --name AKSClusterd

*Results* : 
Merged "AKSClusterd" as current context in /home/dunvael/.kube/config*

# Deploy application with yaml file
kubectl apply -f azure-vote.yaml # (nom du fichier yaml)

# Check the services
kubectl get service 
# --watch si l'on souhaite vérifier en permanence

# Create a secret for the redis password with a username
kubectl create secret generic redis-secret-duna --from-literal=username=userduna --from-literal=password=redis_password_915

# Check the secret creation
kubectl describe secret nomdusecret

# Storage account creation
az storage account create -n b6dredisstockacc -g b6duna -l japaneast --sku Standard_LRS

# Fileshare creation
az storage share create -n $AKS_PERS_SHARE_NAME --connection-string $AZURE_STORAGE_CONNECTION_STRING

# Kubernetes secret creation
kubectl create secret generic storage-secret --from-literal=azurestorageaccountname=b6dredisstockacc --from-literal=azurestorageaccountkey=L7GPm1jVwpKEHiJino8OJ9CssGmTLhn6DO3W0Wq2VUo2M0R1LWsQIENZEW91TfFTM4NZJm/ZiPjX+AStbpfbEA==

# Delete deployments, services et persistent volumes claim
kubectl delete deploy --all
kubectl delete svc --all
kubectl delete pvc --all
kubectl delete pv --all

# Delete the resource group
az group delete --name b6duna --yes --no-wait

# Create an alias for a command on azure CLi 
alias cequel'onveutmettre="cequel'onveutchanger"

# Check the created pods and their status
kubectl get nodes

# Get the pods with their id et status
kubectl describe pods "podid"

# Delete a pod
kubectl delete pods "podid"

# Get the deployments
kubectl get deployment

# Get the deployments with their id et status
kubectl describe deployment mydeployment

# Delete the deployments
kubectl delete deployment nomdudéploiement

# Access all the logs from all containers
kubectl logs podname --all-containers

# Access the logs from a specific container
kubectl logs podname -c mycontainer

# Access to events
kubectl get events

# List all events from a specific pod
kubectl get events --field-selector involvedObject.name=mypod

# Describe the issues from one specific pod
kubectl describe pod pod-missing-config