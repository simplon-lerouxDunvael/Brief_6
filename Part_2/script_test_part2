# My id Subscription
a1f74e2d-ec58-4f9a-a112-088e3469febb

# Create an AKS cluster
az aks create -g b6duna --enable-managed-identity --node-count 4 --enable-addons monitoring --enable-msi-auth-for-monitoring  --generate-ssh-keys

# Connexion to Cluster :
az aks get-credentials --resource-group b6duna --name AKSClusterd2

# Deploy application with yaml file
kubectl apply -f ingress.yaml # (nom du fichier yaml)

# Check the created deployments, services and pods and their status
kubectl get deploy --namespace ingress-nginx
kubectl get svc --namespace ingress-nginx
kubectl get pods --namespace ingress-nginx

# Get the IP address to point the DNS to nginx
k get ingress

# Install helm and jetstack
helm repo add jetstack https://charts.jetstack.io
helm search repo jetstack

# Install cert-manager with helm
helm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --set installCRDs=true --version v1.5.4 --set 'extraArgs={--dns01-recursive-nameservers=8.8.8.8:53\,1.1.1.1:53}'

# Create a gandi secret for cert-manager
kubectl create secret generic gandi-credentials --from-literal=api-token='0ekMKoqwRJCDASqIX4X8jzj8'
*Results* = secret/gandi-credentials created

# Install cert-manager-webhook
helm install cert-manager-webhook-gandi --repo https://bwolf.github.io/cert-manager-webhook-gandi --version v0.2.0 --namespace cert-manager --set features.apiPriorityAndFairness=true --set logLevel=6 --generate-name
*Results* = 
NAME: cert-manager-webhook-gandi-1665665029
LAST DEPLOYED: Thu Oct 13 12:43:56 2022
NAMESPACE: cert-manager
STATUS: deployed
REVISION: 1
TEST SUITE: None

# Check pods for namespace cert-manager
kubectl get pods --namespace cert-manager

# Create a role for the gandi secret and bind it to the webhook
kubectl create role access-secrets --verb=get,list,watch,update,create --resource=secrets
kubectl create rolebinding --role=access-secrets default-to-secrets --serviceaccount=cert-manager:cert-manager-webhook-gandi-1665665029

# Apply yaml files for TLS
k apply -f issuer.yaml
k apply -f certif-space-com.yaml

# Check TLS certificate
k get certificate
k describe certificate
k describe certificaterequest
k describe order
k describe challenge

# Activate the autoscaler on an existing cluster
az aks update --resource-group b6duna --name AKSClusterd2 --enable-cluster-autoscaler --min-count 1 --max-count 8

# 





# Check Webhook configuration
kubectl get ValidatingWebhookConfiguration -A

# Delete Webhook configuration for role ingress-nginx-admission
kubectl delete -A ValidatingWebhookConfiguration ingress-nginx-admission